// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  INTERNAL_BASIC
  CLIENT_BASIC
  CLIENT_PLUS
  GUEST
}

enum Emoji {
  THUMBSUP
  PARTY
  HANDSUP
}

enum Department {
  MARKETING
  SALES
  ENGINEERING
  HR
}

enum Color {
  RED
  GREEN
  YELLOW
  BLUE
  WHITE
}

enum StorageLoc {
  KOSKELONKUJA
  JARVELA
  KEMISTVAGEN
  CLIENT
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  email         String   @unique
  password      String
  role          Role     @default(GUEST)
  profile       Profile
  authoredKudos Kudo[]   @relation("AuthoredKudos")
  kudos         Kudo[]   @relation("RecievedKudos")
}

model Kudo {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  message     String
  createdAt   DateTime   @default(now())
  style       KudoStyle?
  author      User       @relation(references: [id], fields: [authorId], onDelete: Cascade, "AuthoredKudos")
  authorId    String     @db.ObjectId
  recipient   User       @relation(references: [id], fields: [recipientId], "RecievedKudos")
  recipientId String     @db.ObjectId
}

model ItemModel {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  modelName     String    @unique
  modelChildren Product[] @relation("ModelChildren")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  techDrawing String?
  components  String //TODO create model for component collection and make a relation.
}

model Product {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  sku          String     @unique
  productName  String
  category     String
  subCategory1 String?
  subCategory2 String?
  itemModel    ItemModel? @relation(references: [id], fields: [itemModelId], "ModelChildren")
  itemModelId  String     @db.ObjectId
  storageLoc   StorageLoc @default(KOSKELONKUJA)
  storageShelf String
}

type KudoStyle {
  backgroundColor Color @default(YELLOW)
  textColor       Color @default(WHITE)
  emoji           Emoji @default(THUMBSUP)
}

type Profile {
  firstName      String
  lastName       String
  department     Department? @default(MARKETING)
  profilePicture String?
}

type LocatedAt {
  streetAddress String
  postalCode    String
  country       String
  lonDeg        Float?
  latDeg        Float?
}
